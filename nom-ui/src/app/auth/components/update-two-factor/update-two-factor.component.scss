@use "../../../../variables" as vars;

.two-factor {
  // All core layout, typography, and color styling for generic elements are now managed by .nom- classes from system.scss.
  // This component's SCSS primarily handles specific overrides or unique child elements.

  &__toggle-section {
    // Inherits .nom-section for display: flex, flex-direction: column, gap
    margin-bottom: 20px; // Retaining specific margin
  }

  &__toggle {
    width: 100%; // Specific width for toggle
    margin-bottom: 10px; // Specific margin for toggle
    font: var(--mat-sys-body-large); // Apply body-large typography
    color: var(--mat-sys-on-surface); // Text color for toggle
    display: flex;
    justify-content: space-between;

    @media (max-width: 360px) {
      font-size: var(
        --mat-sys-body-small-size
      ); // Smaller font for toggle on small screens
    }

    @media (min-width: vars.$breakpoint-mobile) {
      font-size: var(
        --mat-sys-headline-small-size
      ); // Larger font for toggle on desktop
      margin-bottom: 10px;
    }
  }

  &__setup-section {
    // Inherits .nom-section
    margin-top: 20px; // Retaining specific margin
    margin-bottom: 20px; // Retaining specific margin

    @media (min-width: vars.$breakpoint-mobile) {
      margin-top: 30px; // Desktop margin
      margin-bottom: 30px; // Desktop margin
    }
  }

  &__qr-code-placeholder {
    display: flex;
    justify-content: center;
    margin-bottom: 20px; // Retaining specific margin

    @media (min-width: vars.$breakpoint-mobile) {
      // Desktop adjustments to this element might be handled by .nom-horizontal-group direct children
    }
  }

  &__shared-key-details {
    // Inherits .nom-section for display: flex, flex-direction: column, gap
    margin-top: 15px; // Retaining specific margin
    text-align: center; // Mobile text align

    @media (min-width: vars.$breakpoint-mobile) {
      flex-grow: 1; // Allow details to take remaining space
      margin-top: 0; // Reset mobile margin
      text-align: left; // Align left on desktop
    }
  }

  &__copy-button {
    margin-left: 10px; // Specific margin for copy button
    flex-shrink: 0; // Prevent shrinking
    color: var(--mat-sys-on-surface); // Icon color
  }

  &__option-checkbox {
    width: 100%; // Specific width for checkbox
    margin-bottom: 10px; // Specific margin for checkbox
    font: var(--mat-sys-body-medium); // Apply body-medium typography
    color: var(--mat-sys-on-surface);

    @media (max-width: 360px) {
      font-size: var(
        --mat-sys-body-small-size
      ); // Smaller font for checkbox on small screens
    }

    @media (min-width: vars.$breakpoint-mobile) {
      font-size: var(
        --mat-sys-body-large-size
      ); // Larger font for checkbox on desktop
    }
  }

  &__copy-codes-button {
    margin-top: 15px; // Specific margin for copy codes button from codes
    // Material accent button will handle its own color
    mat-icon {
      font-size: var(
        --mat-sys-body-large-size
      ); // Match icon size to body-large
      height: var(--mat-sys-body-large-size);
      width: var(--mat-sys-body-large-size);
      margin-right: 5px;
    }
  }

  &__options-section {
    // Inherits .nom-section
    margin-top: 20px; // Retaining specific margin
    margin-bottom: 20px; // Retaining specific margin

    @media (min-width: vars.$breakpoint-mobile) {
      margin-top: 30px; // Desktop margin
      margin-bottom: 20px; // Desktop margin
    }
  }
}
